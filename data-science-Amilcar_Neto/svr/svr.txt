# Bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVR

# Dataset
dataset = pd.read_csv("tempo_salarios.csv")
X = dataset.iloc[:,0].values
Y = dataset.iloc[:,-1].values

# Padronização
X = X.reshape(len(X),1)
Y = Y.reshape(len(Y),1)

sc_X = StandardScaler()
sc_Y = StandardScaler()
X = sc_X.fit_transform(X)
Y = sc_Y.fit_transform(Y)

# Regressão de Vetores de Suporte (SVR) - Linear
svr_lin = SVR(kernel="linear")
svr_rbf = SVR(kernel="rbf")

Y = np.ravel(Y)
svr_lin.fit(X,Y)

'''
plt.scatter(sc_X.inverse_transform(X), sc_Y.inverse_transform(Y), color = 'red')
plt.plot(sc_X.inverse_transform(X), sc_Y.inverse_transform(svr_lin.predict(X)), color = 'blue')
plt.title('Regressão Linear usando SVR - kernel Linear')
plt.xlabel('Anos de Experiência')
plt.ylabel('Salário')
plt.show()
'''

# Regressão de Vetores de Suporte (SVR) - RBF
Y = np.ravel(Y)
svr_rbf.fit(X,Y)

'''
plt.scatter(sc_X.inverse_transform(X), sc_Y.inverse_transform(Y), color = 'red')
plt.plot(sc_X.inverse_transform(X), sc_Y.inverse_transform(svr_lin.predict(X)), color = 'blue')
plt.title('Regressão Linear usando SVR - kernel Linear')
plt.xlabel('Anos de Experiência')
plt.ylabel('Salário')
plt.show()
'''